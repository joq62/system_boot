%%%-------------------------------------------------------------------
%%% @author c50 <joq62@c50>
%%% @copyright (C) 2023, c50
%%% @doc
%%%
%%% @end
%%% Created : 31 Jul 2023 by c50 <joq62@c50>
%%%-------------------------------------------------------------------
-module(lib_control_node).

-define(Iterations,100).
%% API
-export([
	 create_node_dir/1,
	 delete_node_dir/1,
	 start_node/1,
	 stop_node/1,
	 is_alive/1
	]).

%%%===================================================================
%%% API
%%%===================================================================
%%--------------------------------------------------------------------
%% @doc
%% @spec
%% @end
%%--------------------------------------------------------------------
is_alive(Node)->
    case is_node_started(Node) of
	false->
	    false;
	true ->
	    true
    end.
								 

%%--------------------------------------------------------------------
%% @doc
%% @spec
%% @end
%%--------------------------------------------------------------------
start_node(NodeName)->
    {ok,Host}=net:gethostname(),
    CookieStr=atom_to_list(erlang:get_cookie()),
    ErlArgs=" -setcookie "++CookieStr,
    Result=case slave:start(Host,NodeName,ErlArgs) of
	       {error,{already_running, ProviderNode}}->
		   {error,["Already running ",?MODULE,?LINE,ProviderNode,NodeName,CookieStr,ErlArgs]};
	       {error,Reason}->
		   {error,["Failed to start Node ",?MODULE,?LINE,Reason,NodeName,CookieStr,ErlArgs]};
	       {ok,ProviderNode}->	
		   {ok,ProviderNode}
	   end,
    Result.

%%--------------------------------------------------------------------
%% @doc
%% @spec
%% @end
%%--------------------------------------------------------------------
stop_node(ProviderNode)->
    slave:stop(ProviderNode),
    case is_node_stopped(ProviderNode) of
	false->
	    {error,["Failed to stop node ",ProviderNode,?MODULE,?LINE]};
	true ->
	    ok
    end.
%%%===================================================================
%%% Internal functions
%%%===================================================================
%%--------------------------------------------------------------------
%% @doc
%% @spec
%% @end
%%--------------------------------------------------------------------

%%--------------------------------------------------------------------
%% @doc
%% @spec
%% @end
%%--------------------------------------------------------------------
is_node_started(Node)->
    is_node_started(?Iterations,Node,false).

is_node_started(_N,_Node,true)->
    true;
is_node_started(0,_Node,Boolean) ->
    Boolean;
is_node_started(N,Node,_) ->
  %  io:format(" ~p~n",[{N,Node,erlang:get_cookie(),?MODULE,?LINE}]),
    Boolean=case net_adm:ping(Node) of
		pang->
		    timer:sleep(30),
		    false;
		pong->
		    true
	    end,
    is_node_started(N-1,Node,Boolean).

%%--------------------------------------------------------------------
%% @doc
%% @spec
%% @end
%%--------------------------------------------------------------------
is_node_stopped(Node)->
    is_node_stopped(?Iterations,Node,false).

is_node_stopped(_N,_Node,true)->
    true;
is_node_stopped(0,_Node,Boolean) ->
    Boolean;
is_node_stopped(N,Node,_) ->
    Boolean=case net_adm:ping(Node) of
		pong->
		    timer:sleep(500),
		    false;
		pang->
		    true
	    end,
    is_node_stopped(N-1,Node,Boolean).
